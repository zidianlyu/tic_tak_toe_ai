{"version":3,"sources":["components/controller/Controller.style.js","constants/game.js","components/provider/Context.jsx","components/header/Header.jsx","components/header/Header.style.js","components/footer/Footer.jsx","components/footer/Footer.style.js","components/controller/cell/Cell.jsx","components/controller/cell/Cell.style.js","utils/control.js","utils/next.js","components/controller/message/Message.jsx","components/controller/Controller.jsx","utils/screen.js","components/app/App.style.js","components/app/App.jsx","serviceWorker.js","constants/theme.js","utils/score.js","components/provider/Provider.jsx","index.js"],"names":["POSITION","CROSS_LINE","position","transition","backgroundColor","lightBlue","width","ROW","transform","transformOrigin","COL","top","DIA","GAME_MODE","GAME_TURN","GAME_STATE","ICON","WIN_POSITIONS","winPosition","coordinates","React","createContext","BUTTONS","displayName","gameMode","Header","this","props","classes","isXs","Grid","container","direction","alignItems","spacing","className","header","Title","Action","Restart","item","Typography","variant","style","fontWeight","justify","map","idx","xs","sm","key","Button","button","color","size","fullWidth","onClick","context","setGameMode","newGame","Component","contextType","Context","withWidth","withStyles","theme","padding","background","yellow","palette","common","black","textTransform","boxShadow","shadows","withTheme","LINKS","name","link","Footer","footer","href","font","white","Cell","row","col","Consumer","cell","isComputerThinking","humanPlay","disableRipple","gameBoard","display","justifyContent","height","fontSize","breakpoints","down","randomFromArray","arr","Math","floor","random","length","getAvailablePositions","board","positions","push","hasEmptyCell","some","nextIcon","gameOnIcon","nextTurn","gameTurn","nextBoard","icon","newBoard","slice","nextGameState","rowA","colA","rowB","colB","rowC","colC","tileA","isTie","Message","gameState","textInfo","Controller","type","cellGap","rowGap","gapType","reduce","aggregator","concat","Gap","rowIdx","_","colIdx","Aggregator","Row","lineHeight","controller","Board","overflow","left","right","pageMaxWidth","maxWidth","App","app","CssBaseline","Fade","in","timeout","Paper","elevation","square","paper","marginTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","console","log","onUpdate","onSuccess","catch","error","createMuiTheme","primary","main","blue","secondary","pink","status","danger","red","typography","useNextVariants","miniMax","depth","alpha","beta","isMaximizer","getGameState","availablePositions","maxScore","Infinity","score","max","minScore","min","generateProviderState","Array","fill","Provider","restart","initOnAIComputer","setTimeout","setState","computerTimer","clearTimeout","randomEmptyPosition","computerPlay","prevState","nextGameOnIcon","nextGameBoard","updateState","aiMove","bestScore","bestMovePosition","findBestMovePosition","value","children","ReactDOM","render","MuiThemeProvider","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f793d5a3.chunk.js","sourcesContent":["import {lightBlue} from '@material-ui/core/colors';\nexport const POSITION = {\n  row1: 'row1', row2: 'row2', row3: 'row3',\n  col1: 'col1', col2: 'col2', col3: 'col3',\n  dia1: 'dia1', dia2: 'dia2',\n}\nconst CROSS_LINE = {\n  position: 'absolute', transition: '700ms',\n  backgroundColor: lightBlue[300],\n  width: 3\n};\nconst ROW = {transform: 'rotate(-90deg)', transformOrigin: 'top'};\nconst COL = {top: 0};\nconst DIA = {top: 2, transformOrigin: 'top'};\n\nexport default theme => ({\n  controller: {\n    padding: theme.spacing(2),\n    background: theme.palette.common.black,\n    color: theme.palette.common.white\n  },\n  board: {\n    position: 'relative', overflow: 'hidden'\n  },\n  cellGap: {\n    background: theme.palette.common.white,\n    width: 2, height: 'auto'\n  },\n  rowGap: {\n    background: theme.palette.common.white,\n    width: 'auto', height: 2\n  },\n  [POSITION.row1]: {\n    ...CROSS_LINE, ...ROW, top: 44,\n    [theme.breakpoints.down('xs')]: {\n      top: 37\n    }\n  },\n  [POSITION.row2]: {\n    ...CROSS_LINE, ...ROW, top: 136,\n    [theme.breakpoints.down('xs')]: {\n      top: 114\n    }\n  },\n  [POSITION.row3]: {\n    ...CROSS_LINE, ...ROW, top: 228,\n    [theme.breakpoints.down('xs')]: {\n      top: 191\n    }\n  },\n  [POSITION.col1]: {\n    ...CROSS_LINE, ...COL, left: 42,\n    [theme.breakpoints.down('xs')]: {\n      left: 35\n    }\n  },\n  [POSITION.col2]: {\n    ...CROSS_LINE, ...COL, left: 134,\n    [theme.breakpoints.down('xs')]: {\n      left: 113\n    }\n  },\n  [POSITION.col3]: {\n    ...CROSS_LINE, ...COL, left: 226,\n    [theme.breakpoints.down('xs')]: {\n      left: 190\n    }\n  },\n  [POSITION.dia1]: {\n    ...CROSS_LINE, ...DIA, transform: 'rotateZ(-45deg)',\n  },\n  [POSITION.dia2]: {\n    ...CROSS_LINE, ...DIA, transform: 'rotateZ(45deg)',\n    right: 1,\n  },\n});\n","/*****************\n * Game Constant *\n *****************/\nimport {POSITION} from '../components/controller/Controller.style';\n\nexport const GAME_MODE = {\n  TWO_PLAYERS: 'TWO_PLAYERS',\n  VERSUS_COMPUTER: 'VERSUS_COMPUTER'\n};\n\nexport const GAME_TURN = {\n  HUMAN: 'HUMAN',\n  COMPUTER: 'COMPUTER'\n};\n\nexport const GAME_STATE = {\n  WIN: 'WIN',\n  LOSS: 'LOSS',\n  DRAW: 'DRAW',\n  CONTINUE: 'CONTINUE'\n};\n\nexport const ICON = {\n  O: 'O',\n  X: 'X',\n  EMPTY: '',\n};\n\nexport const WIN_POSITIONS = [\n  {winPosition: POSITION.row1, coordinates: [[0, 0], [0, 1], [0, 2]]},\n  {winPosition: POSITION.row2, coordinates: [[1, 0], [1, 1], [1, 2]]},\n  {winPosition: POSITION.row3, coordinates: [[2, 0], [2, 1], [2, 2]]},\n  {winPosition: POSITION.col1, coordinates: [[0, 0], [1, 0], [2, 0]]},\n  {winPosition: POSITION.col2, coordinates: [[0, 1], [1, 1], [2, 1]]},\n  {winPosition: POSITION.col3, coordinates: [[0, 2], [1, 2], [2, 2]]},\n  {winPosition: POSITION.dia1, coordinates: [[0, 0], [1, 1], [2, 2]]},\n  {winPosition: POSITION.dia2, coordinates: [[0, 2], [1, 1], [2, 0]]},\n];\n","/*********************\n * Context Component *\n *********************/\nimport React from 'react'\n\nexport default React.createContext();\n","/********************\n * Header Component *\n ********************/\nimport React from 'react';\n\n/** Styles. */\nimport {withStyles, withTheme} from '@material-ui/core/styles';\nimport STYLE from './Header.style';\n\n/** Components. */\nimport {withWidth, Grid, Typography, Button} from '@material-ui/core';\nimport {GAME_MODE} from '../../constants/game';\nimport Context from '../provider/Context';\nconst BUTTONS = [\n  {displayName: '2 Players', gameMode: GAME_MODE.TWO_PLAYERS},\n  {displayName: 'Versus Computer', gameMode: GAME_MODE.VERSUS_COMPUTER},\n];\n\nclass Header extends React.Component {\n  get Title() {\n    return (\n      <Grid item>\n        <Typography variant='h4' style={{fontWeight: 500}}>\n          Tic Tac Toe\n        </Typography>\n      </Grid>\n    );\n  }\n\n  get Action() {\n    const {classes, width} = this.props;\n    const isXs = width === 'xs';\n    return (\n      <Grid item style={{width: '100%'}}>\n        <Grid container direction='row' justify='center'\n          spacing={1}>\n          {BUTTONS.map(({displayName, gameMode}, idx) => (\n            <Grid item xs={5} sm={4} key={idx}>\n              <Button className={classes.button} color='primary' size='small'\n                fullWidth onClick={() => this.context.setGameMode(gameMode)}\n                variant={gameMode === this.context.gameMode ?\n                  'contained' : 'outlined'}>\n                <Typography variant={isXs ? 'caption' : 'body1'}>\n                  {displayName}\n                </Typography>\n              </Button>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  get Restart() {\n    const {classes, width} = this.props;\n    const isXs = width === 'xs';\n    return (\n      <Grid item>\n        <Grid container direction='row' justify='center'>\n          <Button variant='contained' color='primary'\n            className={classes.button}\n            onClick={() => this.context.newGame()}>\n            <Typography variant={isXs ? 'caption' : 'body1'}>\n              New Game\n            </Typography>\n          </Button>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  render() {\n    const {classes, width} = this.props;\n    const isXs = width === 'xs';\n    return (\n      <Grid container direction='column' alignItems='center'\n        spacing={isXs ? 2 : 3}\n        className={classes.header}>\n        {this.Title}\n        {this.Action}\n        {this.Restart}\n      </Grid>\n    );\n  }\n}\n\nHeader.contextType = Context;\n\nexport default withWidth()(withStyles(STYLE)(withTheme(Header)));\n","import {yellow} from '@material-ui/core/colors';\n\nexport default theme => ({\n  header: {\n    padding: theme.spacing(3),\n    background: yellow[600],\n    color: theme.palette.common.black\n  },\n  button: {\n    textTransform: 'initial',\n    boxShadow: theme.shadows[0]\n  }\n});\n","/********************\n * Footer Component *\n ********************/\nimport React from 'react';\n\n/** Styles. */\nimport {withStyles} from '@material-ui/styles';\nimport STYLE from './Footer.style';\n\n/** Components. */\nimport {Grid, Button, Typography, withWidth} from '@material-ui/core';\n\nconst LINKS = [\n  {name: 'Portfolio', link: 'https://www.zidianlyu.com'},\n  {name: 'Github', link: 'https://github.com/zidianlyu'}\n];\n\nclass Footer extends React.Component {\n  render() {\n    const {classes, width} = this.props;\n    const isXs = width === 'xs';\n    return (\n      <Grid container direction='row' justify='space-between'\n        className={classes.footer}>\n        {LINKS.map(({name, link}, idx) => (\n          <Grid item xs={5} key={idx}>\n            <Button href={link} className={classes.button} fullWidth>\n              <Typography variant={isXs ? 'caption' : 'body1'}\n                className={classes.font}>\n                {name}\n              </Typography>\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  }\n}\n\nexport default withWidth()(withStyles(STYLE)(Footer));\n","export default theme => ({\n  footer: {\n    padding: theme.spacing(2), background: theme.palette.common.black,\n  },\n  button: {\n    color: theme.palette.common.white, textTransform: 'initial',\n  },\n});\n","/******************\n * Cell Component *\n ******************/\nimport React from 'react';\n\n/** Styles. */\nimport {withStyles} from '@material-ui/styles';\nimport STYLE from './Cell.style';\n\n/** Components. */\nimport {Grid, Button} from '@material-ui/core';\nimport Context from '../../provider/Context';\n\nclass Cell extends React.Component {\n  render() {\n    const {classes, row, col} = this.props;\n    return (\n      <Context.Consumer>\n        {context => (\n          <Grid item className={classes.cell}>\n            <Button variant='outlined' className={classes.button}\n              onClick={() => {\n                if (!context.isComputerThinking) {\n                  context.humanPlay(row, col);\n                }\n              }}\n              disableRipple>\n              {context.gameBoard[row][col]}\n            </Button>\n          </Grid>\n        )}\n      </Context.Consumer>\n    );\n  }\n}\nexport default withStyles(STYLE)(Cell);\n","export default theme => ({\n  cell: {\n    background: theme.palette.common.black,\n    display: 'flex', justifyContent: 'center', alignItems: 'center',\n    transition: 'all 300ms',\n    '&:hover': {\n      background: '#333',\n      transition: 'all 300ms',\n    },\n  },\n  button: {\n    color: theme.palette.common.white,\n    height: 90, width: 90, fontSize: 45, fontWeight: 400,\n    [theme.breakpoints.down('xs')]: {\n      height: 75, width: 75, fontSize: 37, fontWeight: 500,\n    }\n  }\n});\n","/****************\n * Control Util *\n ****************/\nimport {ICON} from '../constants/game';\n\nexport const random = (start, end) =>\n  start + Math.floor(Math.random() * (end - start));\n\nexport const randomFromArray = (arr) =>\n  arr[Math.floor(Math.random() * arr.length)];\n\n\nexport const getAvailablePositions = board => {\n  const positions = [];\n  for (let row = 0; row < board.length; row++) {\n    for (let col = 0; col < board[0].length; col++) {\n      if (board[row][col] === ICON.EMPTY) {\n        positions.push([row, col]);\n      }\n    }\n  }\n  return positions;\n};\n\nexport const randomEmptyPosition = board => {\n  const availablePositions = getAvailablePositions(board);\n  return randomFromArray(availablePositions);\n};\n\nexport const hasEmptyCell = (board) =>\n  board.some(row => row.some(cell => cell === ICON.EMPTY));\n\n","/*************\n * Next Util *\n *************/\nimport {WIN_POSITIONS, ICON, GAME_TURN} from '../constants/game';\nimport {hasEmptyCell} from './control';\n\nexport const nextIcon = (gameOnIcon) => {\n  return gameOnIcon === ICON.X ? ICON.O : ICON.X;\n};\n\nexport const nextTurn = (gameTurn) => {\n  return gameTurn === GAME_TURN.COMPUTER ?\n    GAME_TURN.HUMAN : GAME_TURN.COMPUTER;\n}\n\nexport const nextBoard = (board, row, col, icon) => {\n  const newBoard = board.map(row => row.slice());\n  newBoard[row][col] = icon;\n  return newBoard;\n};\n\nexport const nextGameState = (board) => {\n  for (const {winPosition, coordinates} of WIN_POSITIONS) {\n    const [[rowA, colA], [rowB, colB], [rowC, colC]] = coordinates;\n    const [tileA, tileB, tileC] =\n      [board[rowA][colA], board[rowB][colB], board[rowC][colC]];\n    if (tileA && tileA === tileB && tileA === tileC) {\n      return {winPosition, isTie: false}\n    }\n  }\n  return {winPosition: '', isTie: !hasEmptyCell(board)}\n}\n","/*********************\n * Message Component *\n *********************/\nimport React from 'react';\n\n/** Components. */\nimport {Grid, Typography, withWidth} from '@material-ui/core';\nimport Context from '../../provider/Context';\nimport {GAME_MODE, GAME_TURN} from '../../../constants/game';\nimport {nextIcon} from '../../../utils/next';\n\nclass Message extends React.Component {\n  render() {\n    const {width} = this.props;\n    const isXs = width === 'xs';\n    return (\n      <Context.Consumer>\n        {context => {\n          const {gameState, gameOnIcon, gameMode, gameTurn} = context;\n          const {winPosition, isTie} = gameState;\n          let textInfo = ''\n          if (isTie) {\n            textInfo = 'Tie!'\n          } else {\n            if (gameMode === GAME_MODE.TWO_PLAYERS) {\n              textInfo = winPosition ?\n                `Player(${nextIcon(gameOnIcon)}) wins!` :\n                `It's player(${gameOnIcon}) turn`;\n            } else {\n              if (winPosition) {\n                textInfo = gameTurn === GAME_TURN.HUMAN ?\n                  'Computer win!' : 'You win!';\n              } else {\n                textInfo = gameTurn === GAME_TURN.HUMAN ?\n                  `It's your turn` : `It's computer turn`;\n              }\n            }\n          }\n          return (\n            <Grid item>\n              <Typography variant={isXs ? 'caption' : 'body1'}>\n                {textInfo}\n              </Typography>\n            </Grid>\n          )\n        }}\n      </Context.Consumer>\n    );\n  }\n}\n\nexport default withWidth()(Message);\n","/************************\n * Controller Component *\n ************************/\nimport React from 'react';\n\n/** Styles. */\nimport {withStyles} from '@material-ui/styles';\nimport STYLE from './Controller.style';\n\n/** Components. */\nimport {Grid} from '@material-ui/core';\nimport Cell from './cell/Cell';\nimport Message from './message/Message';\nimport Context from '../provider/Context';\n\nclass Controller extends React.Component {\n  Gap(key, type) {\n    const {cellGap, rowGap} = this.props.classes;\n    return <div key={key} className={type === 'cell' ? cellGap : rowGap} />\n  }\n\n  Aggregator(arr, gapType) {\n    return arr.reduce((aggregator, item, idx) => {\n      if (idx < arr.length - 1) {\n        return aggregator.concat(item, this.Gap(idx + arr.length, gapType));\n      }\n      return aggregator.concat(item)\n    }, []);\n  }\n\n  Row(row, rowIdx) {\n    row = row.map((_, colIdx) =>\n      <Cell row={rowIdx} col={colIdx} key={colIdx} />);\n    return this.Aggregator(row, 'cell');\n  }\n\n  Board(board) {\n    const {classes} = this.props;\n    board = board.map((row, rowIdx) => (\n      <Grid container key={rowIdx} className={classes.board}>\n        {this.Row(row, rowIdx)}\n      </Grid>\n    ))\n    return this.Aggregator(board, 'row');\n  }\n\n  render() {\n    const {classes} = this.props;\n    const {gameBoard, gameState, lineHeight} = this.context;\n    const {winPosition} = gameState;\n    return (\n      <Grid container direction='column' alignItems='center' spacing={3}\n        className={classes.controller}>\n        <Message />\n        <Grid className={classes.board}>\n          {this.Board(gameBoard)}\n          {winPosition && <div className={classes[winPosition]}\n            style={{height: lineHeight}} />}\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nController.contextType = Context;\n\nexport default withStyles(STYLE)(Controller);\n","/***************\n * Screen Util *\n ***************/\nconst SM_SCREEN_1 = 560;\nconst SM_SCREEN_2 = 450;\nexport const MOBILE_SCREEN = 380;\n\nexport const pageMaxWidth = theme => ({\n  maxWidth: theme.spacing(63),\n  [theme.breakpoints.down(SM_SCREEN_1)]: {\n    maxWidth: theme.spacing(52),\n  },\n  [theme.breakpoints.down(SM_SCREEN_2)]: {\n    maxWidth: theme.spacing(48),\n  },\n  [theme.breakpoints.down(MOBILE_SCREEN)]: {\n    maxWidth: 'inherit'\n  }\n});\n","import {pageMaxWidth, MOBILE_SCREEN} from '../../utils/screen';\nexport default theme => ({\n  app: {\n    marginTop: theme.spacing(3),\n    [theme.breakpoints.down(MOBILE_SCREEN)]: {\n      marginTop: 0\n    }\n  },\n  paper: {\n    ...pageMaxWidth(theme),\n    width: '100%',\n    overflow: 'hidden'\n  }\n})\n","/*****************\n * App Component *\n *****************/\nimport React from 'react';\n\n/** Components.s */\nimport {CssBaseline, Paper, Grid, Fade} from '@material-ui/core';\nimport Header from '../header/Header';\nimport Footer from '../footer/Footer';\nimport Controller from '../controller/Controller';\n\n/** Styles. */\nimport {withStyles} from '@material-ui/styles';\nimport STYLE from './App.style';\n\nclass App extends React.Component {\n  render() {\n    const {classes} = this.props;\n    return (\n      <Grid container direction='row' justify='center' className={classes.app}>\n        <CssBaseline />\n        <Fade in timeout={800}>\n          <Paper elevation={5} square={false} className={classes.paper}>\n            <Header />\n            <Controller />\n            <Footer />\n          </Paper>\n        </Fade>\n      </Grid>\n    );\n  }\n};\n\nexport default withStyles(STYLE)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createMuiTheme} from '@material-ui/core/styles';\nimport {blue, pink, red} from '@material-ui/core/colors';\n\nexport default createMuiTheme({\n    palette: {\n        primary: {\n            main: blue[700],\n        },\n        secondary: pink,\n        error: pink,\n    },\n    status: {\n        danger: red,\n    },\n    typography: {\n        useNextVariants: true\n    }\n});\n","/**************\n * Score Util *\n **************/\nimport {WIN_POSITIONS, GAME_STATE} from '../constants/game';\nimport {nextBoard, nextIcon} from './next';\nimport {hasEmptyCell, getAvailablePositions, randomFromArray} from './control';\n\nconst getGameState = (board, gameOnIcon) => {\n  for (const {coordinates} of WIN_POSITIONS) {\n    const [[rowA, colA], [rowB, colB], [rowC, colC]] = coordinates;\n    const [tileA, tileB, tileC] = [\n      board[rowA][colA], board[rowB][colB], board[rowC][colC],\n    ];\n    if (tileA && tileA === tileB && tileA === tileC) {\n      if (tileA === gameOnIcon) {\n        return GAME_STATE.WIN;\n      }\n      return GAME_STATE.LOSS;\n    }\n  }\n  return hasEmptyCell(board) ? GAME_STATE.CONTINUE : GAME_STATE.DRAW;\n};\n\nconst miniMax = (board, depth, gameOnIcon, alpha, beta, isMaximizer) => {\n  const gameState = getGameState(board, gameOnIcon);\n  if (gameState === GAME_STATE.WIN) {\n    return 10 - depth;\n  } else if (gameState === GAME_STATE.LOSS) {\n    return -10 + depth;\n  } else if (gameState === GAME_STATE.DRAW) {\n    return 0;\n  }\n\n  const availablePositions = getAvailablePositions(board);\n  if (isMaximizer) {\n    // For Maximizer\n    let maxScore = -Infinity;\n    for (const [row, col] of availablePositions) {\n      const nextGameBoard = nextBoard(board, row, col, gameOnIcon);\n      const score = miniMax(\n        nextGameBoard, depth + 1, gameOnIcon, alpha, beta, !isMaximizer);\n      maxScore = Math.max(maxScore, score);\n      alpha = Math.max(alpha, score);\n      if (alpha >= beta) {\n        break;\n      }\n    }\n    return maxScore;\n  } else {\n    // For Minimizer\n    let minScore = Infinity;\n    for (const [row, col] of availablePositions) {\n      const nextGameBoard = nextBoard(board, row, col, nextIcon(gameOnIcon));\n      const score = miniMax(\n        nextGameBoard, depth + 1, gameOnIcon, alpha, beta, !isMaximizer);\n      minScore = Math.min(minScore, score);\n      beta = Math.min(beta, score);\n      if (alpha >= beta) {\n        break;\n      }\n    }\n    return minScore;\n  }\n};\n\n\nexport const findBestMovePosition = (board, gameOnIcon) => {\n  let bestScore = -Infinity;\n  const availablePositions = getAvailablePositions(board);\n  let bestMovePosition = randomFromArray(availablePositions);\n  for (const [row, col] of availablePositions) {\n    const nextGameBoard = nextBoard(board, row, col, gameOnIcon);\n    const score = miniMax(\n      nextGameBoard, 0, gameOnIcon, -Infinity, Infinity, false);\n    if (score > bestScore) {\n      [bestScore, bestMovePosition] = [score, [row, col]];\n    }\n  }\n  return bestMovePosition;\n};\n","/**********************\n * Provider Component *\n **********************/\nimport React from 'react';\n\n/** Component. */\nimport Context from './Context';\n\n/** Constants. */\nimport {GAME_MODE, GAME_TURN, ICON} from '../../constants/game';\n\n/** Utils. */\nimport {randomFromArray, randomEmptyPosition, hasEmptyCell} from '../../utils/control';\nimport {nextIcon, nextTurn, nextBoard, nextGameState} from '../../utils/next';\nimport {findBestMovePosition} from '../../utils/score';\n\nconst COMPUTER_THINK_TIME = 500;\nconst EXPAND_LINE_HEIGHT = 400;\n\nconst generateProviderState = () => ({\n  gameBoard: new Array(3).fill().map(_ =>\n    new Array(3).fill().map(_ => ICON.EMPTY)),\n  gameOnIcon: randomFromArray([ICON.O, ICON.X]),\n  gameState: {\n    winPosition: '',\n    isTie: false\n  },\n  lineHeight: 0,\n  gameMode: GAME_MODE.TWO_PLAYERS,\n  gameTurn: randomFromArray([GAME_TURN.COMPUTER, GAME_TURN.HUMAN]),\n  isComputerThinking: false,\n});\n\nexport default class Provider extends React.Component {\n  state = {\n    ...generateProviderState(),\n    setGameMode: (gameMode) => {\n      if (this.state.gameMode !== gameMode) {\n        this.restart(gameMode)\n      }\n    },\n    humanPlay: (row, col) => this.humanPlay(row, col),\n    newGame: () => this.restart(this.state.gameMode)\n  }\n\n  componentDidMount() {\n    this.initOnAIComputer()\n  }\n\n  componentDidUpdate() {\n    const {gameState, lineHeight} = this.state;\n    const {winPosition} = gameState;\n    if (winPosition && lineHeight !== EXPAND_LINE_HEIGHT) {\n      window.setTimeout(() =>\n        this.setState({lineHeight: EXPAND_LINE_HEIGHT}), 50);\n    }\n  }\n\n  initOnAIComputer() {\n    if (this.state.gameMode === GAME_MODE.VERSUS_COMPUTER &&\n      this.state.gameTurn === GAME_TURN.COMPUTER) {\n      if (this.computerTimer) {\n        window.clearTimeout(this.computerTimer);\n      }\n      this.setState({isComputerThinking: true});\n      this.computerTimer = setTimeout(() => {\n        const [row, col] = randomEmptyPosition(this.state.gameBoard);\n        this.computerPlay(row, col);\n        this.setState({isComputerThinking: false});\n      }, COMPUTER_THINK_TIME)\n    }\n  }\n\n  restart(gameMode) {\n    this.setState({...generateProviderState(), gameMode, lineHeight: 0},\n      () => this.initOnAIComputer());\n  }\n\n  updateState(prevState, row, col) {\n    const {gameBoard, gameOnIcon, gameTurn} = prevState;\n    const nextGameOnIcon = nextIcon(gameOnIcon);\n    const nextGameBoard = nextBoard(gameBoard, row, col, gameOnIcon)\n    return {\n      gameState: nextGameState(nextGameBoard),\n      gameOnIcon: nextGameOnIcon,\n      gameTurn: nextTurn(gameTurn),\n      gameBoard: nextGameBoard\n    };\n  }\n\n  humanPlay(row, col) {\n    const {gameState, gameBoard, gameMode, gameTurn} = this.state;\n    const {winPosition} = gameState;\n    if (!winPosition && gameBoard[row][col] === ICON.EMPTY &&\n      (gameMode === GAME_MODE.TWO_PLAYERS || gameTurn === GAME_TURN.HUMAN)) {\n      this.setState(prevState => this.updateState(prevState, row, col), () => {\n        // Get AI move in `versus computer` mode.\n        const {gameState, gameMode, gameTurn} = this.state;\n        const {winPosition} = gameState;\n        if (!winPosition &&\n          gameMode === GAME_MODE.VERSUS_COMPUTER &&\n          gameTurn === GAME_TURN.COMPUTER) {\n          this.setState({isComputerThinking: true});\n          window.setTimeout(() => {\n            this.aiMove()\n            this.setState({isComputerThinking: false});\n          }, COMPUTER_THINK_TIME);\n        }\n      });\n    }\n  }\n\n  aiMove() {\n    const {gameBoard, gameOnIcon} = this.state;\n    if (hasEmptyCell(gameBoard)) {\n      const [row, col] = findBestMovePosition(gameBoard, gameOnIcon);\n      this.computerPlay(row, col);\n    }\n  }\n\n  computerPlay(row, col) {\n    const {gameState, gameBoard, gameMode, gameTurn} = this.state;\n    const {winPosition} = gameState;\n    if (!winPosition &&\n      gameBoard[row][col] === ICON.EMPTY &&\n      gameMode === GAME_MODE.VERSUS_COMPUTER &&\n      gameTurn === GAME_TURN.COMPUTER) {\n      this.setState(prevState => this.updateState(prevState, row, col));\n    }\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n","/******************\n * Starting Point *\n ******************/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\n/** Cache. */\nimport * as serviceWorker from './serviceWorker';\n\n/** Material UI. */\nimport {MuiThemeProvider} from '@material-ui/core/styles';\nimport theme from './constants/theme';\nimport Provider from './components/provider/Provider';\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <Provider>\n      <App />\n    </Provider>\n  </MuiThemeProvider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (process.env.NODE_ENV === 'development') {\n  serviceWorker.unregister();\n} else {\n  serviceWorker.register();\n}\n"],"sourceRoot":""}